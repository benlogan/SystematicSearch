@INPROCEEDINGS{6008495,
  author={Johann, Timo and Dick, Markus and Kern, Eva and Naumann, Stefan},
  booktitle={2011 International Symposium on Humanities, Science and Engineering Research}, 
  title={Sustainable development, sustainable software, and sustainable software engineering: An integrated approach}, 
  year={2011},
  volume={},
  number={},
  pages={34-39},
  abstract={Sustainability is a keyword in the 21th century. It gains importance in all industry sectors, in politics and in public perception. In our paper we give an overview of our research in the field of sustainability in computer science. We focus on software and the development of software. Therefore we make a proposal for a life cycle model which helps to develop green and sustainable software products. In addition we present concrete realizations to support stakeholders involved in the software products' life cycle.},
  keywords={},
  doi={10.1109/SHUSER.2011.6008495},
  ISSN={2378-9816},
  month={June},}@INPROCEEDINGS{9679832,
  author={Tanveer, Binish},
  booktitle={2021 36th IEEE/ACM International Conference on Automated Software Engineering Workshops (ASEW)}, 
  title={Sustainable software engineering - have we neglected the software engineer's perspective?}, 
  year={2021},
  volume={},
  number={},
  pages={267-270},
  abstract={Background: Software development is a knowledge-intensive and creative activity requiring human ingenuity, thus, sustainability from an engineer's perspective (i.e., meeting an engineer's personal and professional needs while maintaining their mental and physical well-being) must be achieved and maintained. Aims: With this paper, we aim to bring attention to the currently overlooked aspect of sustainability from an individual engineer's perspective. Method: Through an analysis of systematic literature reviews and mapping studies, this research demonstrates a lack of research investigating the individual (human) dimension of sustainability in the current software engineering literature. Results: The analysis of the literature reviews reveals that the current research has mainly focused on reducing the energy footprint of software systems. Thus, revealing the renewed need for paying attention to the individual engineer's perspective. Conclusion: Future research should leverage contributions from related research areas like human aspects in software engineering (e.g., topics like cognition and motivation). There is a need for identifying factors that impact sustainability at an individual level and their interplay with the team and organization level practices, policies, and decisions. The overall ambition is to develop empirically validated guidelines and best practices to measure, improve and maintain sustainability from an engineer's perspective. Such measures are expected to ensure engineers' sustainability and enable highquality software development.},
  keywords={},
  doi={10.1109/ASEW52652.2021.00059},
  ISSN={2151-0830},
  month={Nov},}@INPROCEEDINGS{7169671,
  author={Chitchyan, Ruzanna and Noppen, Joost and Groher, Iris},
  booktitle={2015 IEEE/ACM 5th International Workshop on Product Line Approaches in Software Engineering}, 
  title={What Can Software Engineering Do for Sustainability: Case of Software Product Lines}, 
  year={2015},
  volume={},
  number={},
  pages={11-14},
  abstract={Sustainable living, i.e., Living within the bounds of the available environmental, social, and economic resources, is the focus of many present-day social and scientific discussions. But what does sustainability mean within the context of Software Product Line Engineering (SPLE)? And what does SPLE do for sustainable living? In this paper we take the first step towards identification of the sustainability-related characteristics relevant to SPLE. The paper also discusses how the key areas of interest to the current SPL community (as reflected by what is measured and optimised in SPLs today) relate to these sustainability characteristics.},
  keywords={},
  doi={10.1109/PLEASE.2015.11},
  ISSN={},
  month={May},}@INPROCEEDINGS{8816873,
  author={Rosado de Souza, Mário and Haines, Robert and Vigo, Markel and Jay, Caroline},
  booktitle={2019 IEEE/ACM 12th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)}, 
  title={What Makes Research Software Sustainable? An Interview Study with Research Software Engineers}, 
  year={2019},
  volume={},
  number={},
  pages={135-138},
  abstract={Software is now a vital scientific instrument, providing the tools for data collection and analysis across disciplines from bioinformatics and computational physics, to the humanities. The software used in research is often home-grown and bespoke: it is constructed for a particular project, and rarely maintained beyond this, leading to rapid decay, and frequent 'reinvention of the wheel'. Understanding how to develop sustainable research software, such that it is suitable for future reuse, is therefore of interest to both researchers and funders, but how to achieve this remains an open question. Here we report the results of an interview study examining how research software engineers - the people actively developing software in an academic research environment - subjectively define software sustainability. Thematic analysis of the data reveals two interacting dimensions: intrinsic sustainability, which relates to internal qualities of software, such as modularity, encapsulation and testability, and extrinsic sustainability, concerning cultural and organisational factors, including how software is resourced, supported and shared. Research software engineers believe an increased focus on quality and discoverability are key factors in increasing the sustainability of academic research software.},
  keywords={},
  doi={10.1109/CHASE.2019.00039},
  ISSN={2574-1837},
  month={May},}@INPROCEEDINGS{8449016,
  author={Haupt, Carina and Meinel, Michael and Schlauch, Tobias},
  booktitle={2018 IEEE/ACM 13th International Workshop on Software Engineering for Science (SE4Science)}, 
  title={The Software Engineering Initiative of DLR: Overcome the Obstacles and Develop Sustainable Software}, 
  year={2018},
  volume={},
  number={},
  pages={16-19},
  abstract={Software is a vital part of modern research. The competence to develop sustainable software becomes increasingly important for research organizations. The DLR - a large research organization in Germany - has set up a software engineering initiative to address typical obstacles in this regard such as missing long-term funding, lack of incentives, or missing knowledge about essential software development practices. In this paper, we describe the concept and activities of the initiative as well as discuss the impact of these activities on the identified obstacles.},
  keywords={},
  doi={},
  ISSN={},
  month={June},}@INPROCEEDINGS{8409215,
  author={Turkin, Ihor and Vykhodets, Yuliya},
  booktitle={2018 IEEE 9th International Conference on Dependable Systems, Services and Technologies (DESSERT)}, 
  title={Software engineering master's program and Green IT: The design of the software Engineering Sustainability course}, 
  year={2018},
  volume={},
  number={},
  pages={662-666},
  abstract={The paper presents an academic case where the authors describe elaborated design of the course “Software Engineering Sustainability” to introduce the sustainable concept into educational programs for software engineers. Presented course design considers requirements of employers, maintains the successful experience of national higher education and professional industry standards, and conforms to the European Union e-Competence Framework. The authors present the design of the course with a description of the course content and visible positioning Green Information and Communication Technology (ICT). The course has been being delivered by the first author at National Aerospace University “Kharkiv Aviation Institute”.},
  keywords={},
  doi={10.1109/DESSERT.2018.8409215},
  ISSN={},
  month={May},}@INPROCEEDINGS{5876124,
  author={Penzenstadler, Birgit and Fleischmann, Andreas},
  booktitle={2011 24th IEEE-CS Conference on Software Engineering Education and Training (CSEE&T)}, 
  title={Teach sustainability in software engineering?}, 
  year={2011},
  volume={},
  number={},
  pages={454-458},
  abstract={Sustainability is becoming an important topic in IT - as contribution of IT to safeguard our future, and as evolving market segment. IT's high productivity in combination with short life cycles and, on the other hand, growing resource problems of our planet, lead to a necessity that software engineers take their share of responsibility for sustainability. Therefore, we need to include the concept of sustainability into the university curriculum of computer science. The challenge is to motivate and interest students (and lecturers) for sustainability, to identify spheres of activity for software engineers, to build up competence fields for solutions, and to incorporate the topic into the syllabus. This paper presents a strategy for integrating the concept of sustainability into a degree course scheme across three stages: find a core of interested people by offering a seminar, then broaden the awareness for sustainability by offering a lecture series, and finally establish the topic by offering teach-the-teacher seminars and integration into software engineering lectures.},
  keywords={},
  doi={10.1109/CSEET.2011.5876124},
  ISSN={2377-570X},
  month={May},}@INPROCEEDINGS{6032566,
  author={Amsel, Nadine and Ibrahim, Zaid and Malik, Amir and Tomlinson, Bill},
  booktitle={2011 33rd International Conference on Software Engineering (ICSE)}, 
  title={Toward sustainable software engineering: NIER track}, 
  year={2011},
  volume={},
  number={},
  pages={976-979},
  abstract={Current software engineering practices have significant effects on the environment. Examples include e-waste from computers made obsolete due to software upgrades, and changes in the power demands of new versions of software. Sustainable software engineering aims to create reliable, long-lasting software that meets the needs of users while reducing environmental impacts. We conducted three related research efforts to explore this area. First, we investigated the extent to which users thought about the environmental impact of their software usage. Second, we created a tool called GreenTracker, which measures the energy consumption of software in order to raise awareness about the environmental impact of software usage. Finally, we explored the indirect environmental effects of software in order to understand how software affects sustainability beyond its own power consumption. The relationship between environmental sustainability and software engineering is complex; understanding both direct and indirect effects is critical to helping humans live more sustainably.},
  keywords={},
  doi={10.1145/1985793.1985964},
  ISSN={1558-1225},
  month={May},}@INPROCEEDINGS{6826229,
  author={Kropp, Martin and Meier, Andreas},
  booktitle={2014 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={New sustainable teaching approaches in software engineering education}, 
  year={2014},
  volume={},
  number={},
  pages={1019-1022},
  abstract={Ten years ago, it was usual that projects in the software industry ran on for years before the customer was able to lay his hands on the product he had ordered. This often resulted in delays, budget overruns and disappointing deliverables. During the last decade, the Agile approach has been taking over software project management, shortening product development cycles from a few years to a few weeks or even days. Recently, the agile approach has even been used for developing a new car which runs 100 miles per gallon [1]. Several recent surveys [2], [3] show that agile methodologies like Scrum, Extreme Programming or Kanban have successfully been adopted by many companies to develop software. However, agile methodologies do not come for free. A different set of skills, or agile practices as they are called, are necessary for the software engineers in order to be able to sucessfully deliver high-quality software at the end of every iteration. The same surveys show that only few of the agile practices are used and even fewer are applied consequently and thoroughly. This is to a great extent due to the lack of skilled software engineers. Although teaching agile software development has drawn some attention in recent research, we do not yet seem to be able to “deliver” the appropriately skilled engineers. What is the reason for this, and more importantly, how can we improve the situation? In this position paper we propose a more holistic approach for teaching agile software engineering, in which the required agile practices and values are not only integrated theoretically but also practically applied and repeated until they become a habit to students and software engineers.},
  keywords={},
  doi={10.1109/EDUCON.2014.6826229},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9425989,
  author={Pinna, Andrea and Baralla, Gavina and Marchesi, Michele and Tonelli, Roberto},
  booktitle={2021 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)}, 
  title={Raising Sustainability Awareness in Agile Blockchain-Oriented Software Engineering}, 
  year={2021},
  volume={},
  number={},
  pages={696-700},
  abstract={This paper presents a first investigation to join agile blockchain-oriented software development principles with sustainability software design principles. The development of blockchain-oriented software should always be performed in the awareness of the potential effects generated from its use, especially in a long-term life cycle perspective. In other terms in the awareness of its present and future sustainability. By using the principles of sustainability software design and recognized the role of blockchain-oriented Agile methodologies to manage changes in technology and requirements, we present a new Agile method for the development of blockchain-oriented systems that includes sustainability awareness practices within the development phases, in particular in the requirements and the acceptance tests. This allows to deal with blockchain-oriented systems sustainability immediately and during the incremental and iterative development process. The paper describes the process in its phases and provides an example of an application to the supply chain sector.},
  keywords={},
  doi={10.1109/SANER50967.2021.00088},
  ISSN={1534-5351},
  month={March},}@INPROCEEDINGS{7203006,
  author={Sawyer, Pete and Sutcliffe, Alistair and Rayson, Paul and Bull, Chris},
  booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering}, 
  title={Dementia and Social Sustainability: Challenges for Software Engineering}, 
  year={2015},
  volume={2},
  number={},
  pages={527-530},
  abstract={Dementia is a serious threat to social sustainability. As life expectancy increases, more people are developing dementia. At the same time, demographic change is reducing the economically active part of the population. Care of people with dementia imposes great emotional and financial strain on sufferers, their families and society at large. In response, significant research resources are being focused on dementia. One research thread is focused on using computer technology to monitor people in at-risk groups to improve rates of early diagnosis. In this paper we provide an overview of dementia monitoring research and identify a set of scientific challenges for the engineering of dementia-monitoring software, with implications for other mental health self-management systems.},
  keywords={},
  doi={10.1109/ICSE.2015.188},
  ISSN={1558-1225},
  month={May},}@INPROCEEDINGS{8588634,
  author={Cohen, Jeremy and Katz, Daniel S. and Barker, Michelle and Haines, Robert and Chue Hong, Neil},
  booktitle={2018 IEEE 14th International Conference on e-Science (e-Science)}, 
  title={Building a Sustainable Structure for Research Software Engineering Activities}, 
  year={2018},
  volume={},
  number={},
  pages={31-32},
  abstract={The profile of research software engineering has been greatly enhanced by developments at institutions around the world to form groups and communities that can support effective, sustainable development of research software. We observe, however, that there is still a long way to go to build a clear understanding about what approaches provide the best support for research software developers in different contexts, and how such understanding can be used to suggest more formal structures, models or frameworks that can help to further support the growth of research software engineering. This short paper provides an overview of some preliminary thoughts and proposes an initial high-level framework based on discussions between the authors around the concept of a set of pillars representing key activities and processes that form the core structure of a successful research software engineering offering.},
  keywords={},
  doi={10.1109/eScience.2018.00015},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9240263,
  author={Jimenez Ramos, Luisa Maria and Duarte Acosta, Nixon and Berrio Lopez, Juan Pablo and Pablo Velez Uribe, Juan},
  booktitle={2020 Congreso Internacional de Innovación y Tendencias en Ingeniería (CONIITI)}, 
  title={To train software engineers with principles of sustainable development: a bibliometric study}, 
  year={2020},
  volume={},
  number={},
  pages={1-4},
  abstract={Sustainability and environmental impact are important factors to consider in the software industry and especially in the training of the professionals who produce it. The non-renewable and increasingly limited resources of our planet generate the need to train engineers in the software area to assume their responsibility for sustainable development. Progress should be made in the inclusion of sustainable development principles in the curricula in the training of future software engineers. This article presents an analysis and monitoring of scientific publications, using bibliometric indicators in order to obtain and provide information on current research trends in the training of professionals in the area of software engineering with principles of sustainable development. For this reason, we conducted a bibliometric study of the Scopus database over the last 10 years, between 2010 and 2019, focusing on keywords such as software, education, teaching, learning, sustainable development and their respective variations. A systematic review method was used in this work, which produced an initial result of 581 papers. Subsequently, it was filtered through the thematic area of Computer Science, obtaining 232 documents. Subsequently, it was filtered by the Sustainable Development and education keywords, additionally filtering by documents type articles and conference publications for a result of 186 documents that resulted in 116 publications with at least one citation and 70 publications with zero citations. The analysis was performed using the search results analysis tool provided by Scopus and, in addition, VOSViewer as a tool to build and visualize bibliometric networks. The differential contribution of this study lies in the filtering, organization and analysis of 186 publications that allows it to be a source of bibliometric information that is expected to be an instrument that helps to focus future research in the area of sustainable software development. Overall and in accordance with the bibliometric indicators taken into account in this work, it is generally concluded that the Latin American region has very low impact production in the study area, than the areas of software engineering with the highest volume of Research related to sustainable development are requirements engineering, software design and architecture.},
  keywords={},
  doi={10.1109/CONIITI51147.2020.9240263},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{7577413,
  author={Khara, Dharmesh and Mahapatra, Debi Prasad},
  booktitle={2016 IEEE 11th International Conference on Global Software Engineering (ICGSE)}, 
  title={Organizational Behavior Engineering for Sustainable Global Software Development}, 
  year={2016},
  volume={},
  number={},
  pages={11-15},
  abstract={We had started our journey as an Offshore Supplier with a clear goal to become the "Software Engineering Partner of choice" for the Siemens R&D organization. Now, while we work as a partner of choice, our sustainability in this role, has largely depended on our ability to demonstrate the right set of behaviors as a partner organization, retain our key people and enable them to grow. Our continuous and conscious focus on people development, as a matter of our organizational culture, has been one of the key factors that have contributed in generating the required value in a partnership. In this paper, we talk about our expedition in which we applied our customized "Organizational Behavior Engineering" practices to deal with our challenges in enabling our people to achieve growth and mastery in the roles they played. We ensured that not only we built and developed technical and domain competencies, but we also retained these competencies to be able to play the role of a dependable partner, on a sustainable basis. In this paper, we also share the WHY part behind our practices, the HOW part of the implementation, the challenges we faced, the results we have achieved and our next steps towards further development.},
  keywords={},
  doi={10.1109/ICGSE.2016.18},
  ISSN={2329-6313},
  month={Aug},}@INPROCEEDINGS{7203142,
  author={Rubin, Julia and Botterweck, Goetz and Pleuss, Andreas and Weiss, David},
  booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering}, 
  title={5th International Workshop on Product LinE Approaches in Software Engineering PLE for a Sustainable Society (PLEASE 2015)}, 
  year={2015},
  volume={2},
  number={},
  pages={989-990},
  abstract={This paper summarizes the motivation, objectives, and format of the 5th International Workshop on Product LinE Approaches in Software Engineering (PLEASE15). The main goal of the PLEASE workshop series is to encourage and promote the adoption of Software Product Line Engineering. This year's edition focuses on the link between software product line engineering (SPLE) and new challenges posed by emerging societal trends. Towards this end, we invited reports on (1) opportunities posed by societal challenges for SPLE research and practice and (2) concrete solutions exemplifying application of SPLE techniques to societal challenges.},
  keywords={},
  doi={10.1109/ICSE.2015.319},
  ISSN={1558-1225},
  month={May},}@INPROCEEDINGS{9264053,
  author={Muccini, Henry},
  booktitle={2020 International Conference on Smart Systems and Technologies (SST)}, 
  title={Software Engineering of Cyber-Physical Spaces for Sustainable Tourism}, 
  year={2020},
  volume={},
  number={},
  pages={3-3},
  abstract={Summary form only given, as follows. The complete presentation was not made available for publication as part of the conference proceedings. The term Cyber-Physical Space is used to identify physical spaces that are enriched by digital software and hardware components, such as RFID, IoT devices, NFC, and more. The applications we engineer are becoming more and more cyber-physical spaces related: think to indoor localization and positioning, to crowd management applications, to context-aware applications reacting to people in proximity. This talk will illustrate my team experience in the engineering of software for cyber-physical spaces applied to the tourism industry. I will use the UFFIZI Galleries crowd management project, as well as the Researcher Night application to illustrate the challenges and opportunities in the field. The CAPS modeling language for cyber-physical spaces engineering will be illustrated as well.},
  keywords={},
  doi={10.1109/SST49455.2020.9264053},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9117366,
  author={Nazir, Sumaira and Fatima, Nargis and Chuprat, Suriayati},
  booktitle={2019 IEEE 6th International Conference on Engineering Technologies and Applied Sciences (ICETAS)}, 
  title={Situational factors affecting Software Engineers Sustainability: A Vision of Modern Code Review}, 
  year={2019},
  volume={},
  number={},
  pages={1-6},
  abstract={Code review is a sustainable software engineering practice to assure software quality. Presently it is performed by software engineers with the help of tool support, for instance, Gerrit and termed as Modern Code Review (MCR). It is a lightweight way to deal with distinguishing abandons from source code. Software engineer's efficiency while performing MCR activities is exposed to varying people related situational factors that impact the software engineer's sustainability. The literature lacks the identification of people related situational factors in MCR. For successful MCR results, there is a need to distinguish people concerning situational factors to enhance the productivity and competence of software engineers for their sustainability. Therefore, this investigation intends to recognize situational variables influencing the ability and efficiency of software engineers. The systematic methodology utilized for this examination is Systematic Literature Review (SLR). The study results reported 52 situational factors. The situational factors are assembled into four fundamental classifications such as team, team interaction, reviewer response and knowledge sharing. The grounded theory approach has been applied to get final unique list of people related situational factors and sub factors. The investigation will be useful for expert performing examination seeing situational factors as well as the sustainability of software engineers engaged with MCR activities.},
  keywords={},
  doi={10.1109/ICETAS48360.2019.9117366},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10172842,
  author={McGuire, Sean and Schultz, Erin and Ayoola, Bimpe and Ralph, Paul},
  booktitle={2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)}, 
  title={Sustainability is Stratified: Toward a Better Theory of Sustainable Software Engineering}, 
  year={2023},
  volume={},
  number={},
  pages={1996-2008},
  abstract={Background: Sustainable software engineering (SSE) means creating software in a way that meets present needs without undermining our collective capacity to meet our future needs. It is typically conceptualized as several intersecting dimensions or “pillars”-environmental, social, economic, technical and in-dividual. However; these pillars are theoretically underdeveloped and require refinement. Objectives: The objective of this paper is to generate a better theory of SSE. Method: First, a scoping review was conducted to understand the state of research on SSE and identify existing models thereof. Next, a meta-synthesis of qualitative research on SSE was conducted to critique and improve the existing models identified. Results: 961 potentially relevant articles were extracted from five article databases. These articles were de-duplicated and then screened independently by two screeners, leaving 243 articles to examine. Of these, 109 were non-empirical, the most common empirical method was systematic review, and no randomized controlled experiments were found. Most papers focus on ecological sustainability (158) and the sustainability of software products (148) rather than processes. A meta-synthesis of 36 qualitative studies produced several key propositions, most notably, that sustainability is stratified (has different meanings at different levels of abstraction) and multisystemic (emerges from interactions among multiple social, technical, and sociotechnical systems). Conclusion: The academic literature on SSE is surprisingly non-empirical. More empirical evaluations of specific sustainability interventions are needed. The sustainability of software development products and processes should be conceptualized as multisystemic and stratified, and assessed accordingly.},
  keywords={},
  doi={10.1109/ICSE48619.2023.00169},
  ISSN={1558-1225},
  month={May},}@INPROCEEDINGS{8920518,
  author={Duboc, Leticia and Betz, Stefanie and Penzenstadler, Birgit and Akinli Kocak, Sedef and Chitchyan, Ruzanna and Leifler, Ola and Porras, Jari and Seyff, Norbert and Venters, Colin C.},
  booktitle={2019 IEEE 27th International Requirements Engineering Conference (RE)}, 
  title={Do we Really Know What we are Building? Raising Awareness of Potential Sustainability Effects of Software Systems in Requirements Engineering}, 
  year={2019},
  volume={},
  number={},
  pages={6-16},
  abstract={Integrating novel software systems in our society, economy, and environment can have far-reaching effects. As a result, software systems should be designed in such a way as to maintain or improve the sustainability of the socio-technical system of their destination. However, a paradigm shift is required to raise awareness of software professionals on the potential sustainability effects of software systems. While Requirements Engineering is considered the key to driving this change, requirements engineers lack the knowledge, experience and methodological support for doing so. This paper presents a question-based framework for raising awareness of the potential effects of software systems on sustainability, as the first step towards enabling the required paradigm shift. A feasibility study of the framework was carried out with two groups of computer science students. The results of the study indicate that the framework helps enable discussions about potential effects that software systems could have on sustainability.},
  keywords={},
  doi={10.1109/RE.2019.00013},
  ISSN={2332-6441},
  month={Sep.},}@INPROCEEDINGS{6272493,
  author={Penzenstadler, Birgit and Bauer, Veronika and Calero, Coral and Franch, Xavier},
  booktitle={16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012)}, 
  title={Sustainability in software engineering: A systematic literature review}, 
  year={2012},
  volume={},
  number={},
  pages={32-41},
  abstract={Background: Supporting sustainability in software engineering is becoming an active area of research. We want to contribute the first Systematic Literature Review(SLR) in this field to aid researchers who are motivated to contribute to that topic by providing a body of knowledge as starting point, because we know from own experience, this search can be tedious and time consuming. Aim: We aim to provide an overview of different aspects of sustainability in software engineering research with regard to research activity, investigated topics, identified limitations, proposed approaches, used methods, available studies, and considered domains. Method: The applied method is a SLR in five reliable and commonly-used databases according to the (quasi-standard) protocol by Kitchenham et al. [1]. We assessed the 100 first results of each database ordered by relevance with respect to the search query. Results: Of 500 classified publications, we regard 96 as relevant for our research questions. We sketch a taxonomy of their topics and domains, and provide lists of used methods and proposed approaches. Most of the excluded publications were ruled out because of an unfitting usage of terms within the search query. Conclusions: Currently, there is little research coverage on the different aspects of sustainability in software engineering while other disciplines are already more active. Future work includes extending the study by reviewing a higher number of publications, including dedicated journal and workshop searches, and snowballing.},
  keywords={},
  doi={10.1049/ic.2012.0004},
  ISSN={},
  month={May},}@ARTICLE{8254307,
  author={Penzenstadler, Birgit and Duboc, Leticia and Venters, Colin C. and Betz, Stefanie and Seyff, Norbert and Wnuk, Krzsztof and Chitchyan, Ruzanna and Easterbrook, Steve M. and Becker, Christoph},
  journal={IEEE Software}, 
  title={Software Engineering for Sustainability: Find the Leverage Points!}, 
  year={2018},
  volume={35},
  number={4},
  pages={22-33},
  abstract={We as software engineers are responsible for the long-term consequences of the systems we design—including impacts on the wider environmental and societal sustainability. However, the field lacks analytical tools for understanding these potential impacts while designing a system or for identifying opportunities for using software to bring about broader societal transformations. This article explores how the concept of leverage points can be used to make sustainability issues more tangible in system design. The example of software for transportation systems illustrates how leverage points can help software engineers map out and investigate the wider system in which the software resides, such that we can use software as an effective tool for engineering a more sustainable world. This article is part of a theme issue on Process Improvement.},
  keywords={},
  doi={10.1109/MS.2018.110154908},
  ISSN={1937-4194},
  month={July},}@INPROCEEDINGS{8376925,
  author={Sadath, Lipsa and Karim, Kayvan and Gill, Stephen},
  booktitle={2018 Advances in Science and Engineering Technology International Conferences (ASET)}, 
  title={Extreme programming implementation in academia for software engineering sustainability}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={The practice of making workable and maintainable software to meet the requirements of the use case is best defined as a software engineering practice. Fundamentally this is different from other engineering practices due to the abstraction level involved in the production. This fact produces different approaches for sustainability in the software industry. The importance of this practice towards a sustainable software industry in academia is very important. We propose a framework XPIA (Extreme Programming In Academia) that uses proven industry practices in software engineering with a focus on pair programming which is a practice in extreme programming to build a common knowledge and technical base in academics.},
  keywords={},
  doi={10.1109/ICASET.2018.8376925},
  ISSN={},
  month={Feb},}@INPROCEEDINGS{7964623,
  author={Torre, Damiano and Procaccianti, Giuseppe and Fucci, Davide and Lutovac, Sonja and Scanniello, Giuseppe},
  booktitle={2017 IEEE/ACM 1st International Workshop on Software Engineering Curricula for Millennials (SECM)}, 
  title={On the Presence of Green and Sustainable Software Engineering in Higher Education Curricula}, 
  year={2017},
  volume={},
  number={},
  pages={54-60},
  abstract={Nowadays, software is pervasive in our everyday lives. Its sustainability and environmental impact have become major factors to be considered in the development of software systems. Millennials-the newer generation of university students-are particularly keen to learn about and contribute to a more sustainable and green society. The need for training on green and sustainable topics in software engineering has been reflected in a number of recent studies. The goal of this paper is to get a first understanding of what is the current state of teaching sustainability in the software engineering community, what are the motivations behind the current state of teaching, and what can be done to improve it. To this end, we report the findings from a targeted survey of 33 academics on the presence of green and sustainable software engineering in higher education. The major findings from the collected data suggest that sustainability is under-represented in the curricula, while the current focus of teaching is on energy efficiency delivered through a fact-based approach. The reasons vary from lack of awareness, teaching material and suitable technologies, to the high effort required to teach sustainability. Finally, we provide recommendations for educators willing to teach sustainability in software engineering that can help to suit millennial students needs.},
  keywords={},
  doi={10.1109/SECM.2017.4},
  ISSN={},
  month={May},}@INPROCEEDINGS{8379798,
  author={Wolfram, Nina and Lago, Patricia and Osborne, Francesco},
  booktitle={2017 Sustainable Internet and ICT for Sustainability (SustainIT)}, 
  title={Sustainability in software engineering}, 
  year={2017},
  volume={},
  number={},
  pages={1-7},
  abstract={The intersection between software engineering research and the problems related to sustainability and green IT has been the subject of increasing attention. In spite of that, we observe that sustainability is still not clearly defined, or understood, in the field of software engineering. This lack of clarity leads to confusion about e.g. what is relevant to measure or the research implications over time or space. This paper provides an overview of how the research so far has defined sustainability, and how this definition has been used to guide which research areas. To this end, we carried out a systematic mapping study for selecting, classifying and analyzing relevant publications. In this study, we investigate which knowledge areas and which time scope of sustainability effects are mostly targeted in scientific research. Our analysis shows research trends and discusses gaps to be filled.},
  keywords={},
  doi={10.23919/SustainIT.2017.8379798},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{7034850,
  author={Betz, Stefanie and Caporale, Timm},
  booktitle={2014 IEEE Fourth International Conference on Big Data and Cloud Computing}, 
  title={Sustainable Software System Engineering}, 
  year={2014},
  volume={},
  number={},
  pages={612-619},
  abstract={Sustainability management is one of the upcoming movements in the 21st century. Communal and private organizations are interested in finding and using "sustainable" solutions and practices. But, there is a lack of available solutions and practices. In the 21st century also, software systems and their underlying business processes are ubiquitous and fundamental for most of the organizations of the industrial society. But, until now, sustainability is not considered by software system engineering. Hence, to support the transition to sustainability, one must have sustainability (aspects) integrated into the software systems and the underlying business processes. Consequently, in this paper a holistic approach is presented to support the complete life cycle of sustainable software system engineering. To realize such an approach, the sustainable business processes and sustainable software systems need to be aligned through the mapping of sustainability aspects considering their respective life cycles. This is important because software makes an important contribution to sustainable business processes and, the other way round, sustainable software only can be developed and maintained using the relevant business processes. Moreover, to realize sustainability aware software system engineering sustainability aspects must be integrated into the business processes life cycle and software system engineering life cycle. To this end, We suggest a conceptual model to integrate sustainability aspects in a business process modeling language. Also, to assist the stakeholder when modeling, designing, executing, and monitoring the business processes a process model will be presented developed. Furthermore, to integrate sustainability aspects in software engineering, sustainability needs to be considered in the different phases of the software development process: requirements specification, design, testing, and maintenance. Thus, we suggest a method to integrate sustainability in software development. Finally, a model is presented showing the combined life cycles of sustainable business processes and sustainable software engineering.},
  keywords={},
  doi={10.1109/BDCloud.2014.113},
  ISSN={},
  month={Dec},}
